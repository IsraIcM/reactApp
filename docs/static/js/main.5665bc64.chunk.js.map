{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACQ,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OACZP,GADY,mBACGO,OAEpBN,EAAc,MAMd,SACI,uBAAOO,KAAK,OAAOC,MAAQT,EAAaU,SAjB1B,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAUH,GAFvF,sBAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIIA,EAAUC,OAJd,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCJHS,EAAU,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UAEtB,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEP1B,EAAQC,GAAW0B,MAAK,SAAAC,GAEhBH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAACtB,IAGGuB,EDjB6BK,CAAc5B,GAApC6B,EAAd,EAAQtB,KAAgBe,EAAxB,EAAwBA,QAExB,OACI,qCACI,oBAAIJ,UAAU,yCAAd,SAAyDlB,IAEvDsB,GAAW,mBAAGJ,UAAU,wCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAEQW,EAASpB,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEdjCmB,EAAe,WAC1B,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAGA,OACE,gCACE,4CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEI8C,EAAWtB,KAAK,SAAAf,GAAG,OACjB,cAAC,EAAD,CAAqBM,UAAYN,GAAlBA,Y,MCV3BsC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5665bc64.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ( {setCategorias} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategorias(cat =>\r\n                [inputValue, ...cat]\r\n            );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={ handleSubmit }>\r\n                <input type=\"text\" value={ inputValue } onChange={ handleInputChange } />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","export const getGifs = async(categoria) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=7LKIbpS5w1rK4IPpzoKjKEkjUkIdUstE&q=${ encodeURI(categoria) }&limit=10`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    const { data: imagenes, loading } = useFetchGifs( categoria );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"card animate__animated animate__fadeIn\">{ categoria }</h3>\r\n\r\n            { loading && <p className=\"card animate__animated animate__flash\">Cargando...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                { \r\n                    imagenes.map( img => (\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    )) \r\n                }   \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(categoria).then(imgs => {\r\n \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n        })\r\n\r\n    }, [categoria])\r\n\r\n    \r\n    return state;\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categorias, setCategorias] = useState([\"OverWatch\"]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Gif Expert</h2>\r\n      <AddCategory setCategorias = { setCategorias } />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categorias.map( cat => \r\n            <GifGrid key={ cat } categoria={ cat } />\r\n          )\r\n        }\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}